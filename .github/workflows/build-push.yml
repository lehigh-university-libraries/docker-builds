name: Workflow Template - Build and push
on:
  workflow_call:
    inputs:
      dir:
        required: true
        type: string
      major_version:
        required: true
        type: string
      build_arg:
        type: string
jobs:
  build-push:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
    steps:

    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_REF#refs/heads/}"  >> $GITHUB_OUTPUT
      id: extract_branch

    - name: Extract tag name
      shell: bash
      run: |-
        t=$(echo ${GITHUB_SHA} | cut -c1-7)
        echo "tag=$t" >> $GITHUB_OUTPUT
      id: extract_tag

    - uses: 'actions/checkout@v3'

    - name: 'Authenticate to Google Cloud'
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: ${{ secrets.GCLOUD_OIDC_POOL }}
        create_credentials_file: true
        service_account: ${{ secrets.GSA }}
        token_format: 'access_token'

    - name: 'Docker login init'
      uses: 'docker/login-action@v1'
      with:
        registry: 'us-docker.pkg.dev'
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'

    - name: 'Docker login'
      run: echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://us-docker.pkg.dev

    - name: Lint Dockerfile
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: ${{ inputs.dir }}/Dockerfile

    - name: Lint shell
      working-directory: ${{ inputs.dir }}
      run: |-
        echo "Running shellcheck on"
        find . -name "*.sh" -exec ls -l {} \;
        echo "Starting..."
        find . -name "*.sh" -exec shellcheck {} \;

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.dir }}
        push: true
        build-args: ${{ inputs.build_arg }}
        tags: |
          us-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_AR_REPO }}/${{ inputs.dir }}:${{ inputs.major_version }}-${{steps.extract_branch.outputs.branch}}-${{steps.extract_tag.outputs.tag}}
          us-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_AR_REPO }}/${{ inputs.dir }}:${{ inputs.major_version }}-${{steps.extract_branch.outputs.branch}}
