# loris.conf
#
# This file is parsed by the ConfigObj library:
#
# <http://www.voidspace.org.uk/python/configobj.html>
#
# ConfigObj uses an ini-like syntax with a few important changes and extensions,
# which are explained here:
#
# <http://www.voidspace.org.uk/python/configobj.html#config-files>
#
# Note that 'unrepr' mode is used, which means that values are parsed as Python
# datatypes, e.g. strings are in quotes, integers are not, True is used for the
# boolean value TRUE, False for the boolean value FALSE, and lists are in []
# with commas (',') as the separators.
#
# <http://www.voidspace.org.uk/python/configobj.html#unrepr-mode>
#
# String interpolation is enabled using the "template" style. OS environment
# variables are available for interpolation, e.g., run_as_user='$USER'
#
# <http://www.voidspace.org.uk/python/configobj.html#string-interpolation>
#

[loris.Loris]
tmp_dp = '/tmp/loris/tmp' # r--
www_dp = '/opt/loris/loris/data/www' # r-x
run_as_user = 'loris'
run_as_group = 'loris'
enable_caching = True
redirect_canonical_image_request = False
redirect_id_slash_to_info = True

# max_size_above_full restricts interpolation of images on the server.
# Default value 200 means that a user cannot request image sizes greater than
# 200% of original image size (width or height).
# Set this value to 100 to disallow interpolation. Set to 0 to remove
# size restriction.
max_size_above_full = 100

proxy_path='$PROXY_URL'
cors_regex = '$CORS_REGEX'
# NOTE: If supplied, cors_regex is passed to re.search():
#    https://docs.python.org/2/library/re.html#re.search
# Any url_root:
#    http://werkzeug.pocoo.org/docs/latest/wrappers/#werkzeug.wrappers.BaseRequest.url_root
# (i.e., https?://domain.edu(:port)?/) that matches will be
# set to the value of Access-Control-Allow-Origin.

[logging]
log_to = 'console'
log_level = 'INFO'
format = '%(asctime)s (%(name)s) [%(levelname)s]: %(message)s'

[resolver]
impl = 'loris.resolver.SimpleHTTPResolver'
cache_root='/opt/loris/cache'
uri_resolvable = True

[img.ImageCache]
cache_dp = '/opt/loris/cache' # rwx

[img_info.InfoCache]
cache_dp = '/opt/loris/cache/info' # rwx

[transforms]
dither_bitonal_images = False
# To enable TIFF output, add "tif" here:
target_formats = ['jpg','png','gif','webp']

# By default PIL throws a DecompressionBombError for images that are larger than
# 2x its MAX_IMAGE_PIXELS property (this limit is 2 * 89478485 = 178956970px).
# This property can be overridden by this config value. If set to 0, MAX_IMAGE_PIXELS
# is set to `None` and there is no limit on image size.
# pil_max_image_pixels = 250000000

    [[jpg]]
    impl = 'JPG_Transformer'

    [[tif]]
    impl = 'TIF_Transformer'

    [[png]]
    impl = 'PNG_Transformer'
